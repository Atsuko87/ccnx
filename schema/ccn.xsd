<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id$ -->
<!DOCTYPE xs:schema PUBLIC "-//W3C//DTD XMLSCHEMA 200102//EN" "XMLSchema.dtd">
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
<!-- XXX
        xmlns:ccn="http://www.parc.com/ccn" 
        targetNamespace="http://www.parc.com/ccn"
        elementFormDefault="unqualified"
        attributeFormDefault="unqualified"
-->

  <xs:annotation>
    <xs:documentation xml:lang="en">
      Content-Centric Networks data schema.
    </xs:documentation>
  </xs:annotation>

<!-- Top-level objects that can appear in 
     documents, messages, etc. -->
<xs:element name="CCNProtocolDataUnit"/> <!-- FIXTHIS - needs a type -->
<xs:element name="ContentObject" type="ContentObjectType"/>
<xs:element name="CompleteName" type="CompleteNameType"/>
<xs:element name="Collection" type="CollectionType"/>
<xs:element name="Link" type="LinkType"/>
<xs:element name="Header" type="HeaderType"/>
<xs:element name="Interest" type="InterestType"/>

<xs:complexType name="CollectionType">
  <xs:sequence>
    <xs:element name="Link" type="LinkType" minOccurs="0" maxOccurs="unbounded"/>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="LinkType">
  <xs:sequence>
    <xs:element name="Name" type="NameType"/>
    <xs:element name="LinkAuthenticator" type="LinkAuthenticatorType" minOccurs="0" maxOccurs="1"/>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="LinkAuthenticatorType">
  <xs:sequence>
    <xs:element name="PublisherID" type="PublisherIDType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="NameComponentCount" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1"/>
    <xs:element name="Timestamp" type="xs:dateTime" minOccurs="0" maxOccurs="1"/>
    <xs:element name="Type" type="ContentType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="ContentHash" type="Base64BinaryType" minOccurs="0" maxOccurs="1"/>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="HeaderType">
  <xs:sequence>
    <xs:element name="Start" type="xs:nonNegativeInteger"/>
    <xs:element name="Count" type="xs:nonNegativeInteger"/>
    <xs:element name="BlockSize" type="xs:nonNegativeInteger"/>
    <xs:element name="Length" type="xs:nonNegativeInteger"/>
    <xs:element name="RootDigest" type="Base64BinaryType"/>
    <xs:element name="ContentDigest" type="Base64BinaryType" minOccurs="0"/>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="NameType">
  <xs:sequence>
    <xs:element name="Component" type="Base64BinaryType"
                minOccurs="0" maxOccurs="unbounded"/>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="Base64BinaryType">
  <xs:simpleContent>
    <xs:extension base="xs:base64Binary">
      <xs:attribute name="ccnbencoding" type="xs:string" fixed="base64Binary"/>
    </xs:extension>
  </xs:simpleContent>
</xs:complexType>
    
<xs:complexType name="ContentAuthenticatorType">
  <xs:sequence>
    <xs:element name="PublisherKeyID" type="KeyIDType"/>
    <xs:element name="NameComponentCount" type="xs:nonNegativeInteger"/>
    <xs:element name="Timestamp" type="xs:dateTime"/> <!-- should be canonical -->
    <xs:element name="Type" type="ContentType"/>
    <xs:element name="KeyLocator" type="KeyLocatorType"/>
    <!-- ContentDigest might change to more complex type,
         currently base64 encoding of DER-encoded
         DigestInfo. This means for a MerkleTree-based or
         similar digest path, not all of the contents of 
         the content digest were actually signed (only the 
         root will be signed), so verification may require some
         alteration of the encoded authenticator structure. -->
    <xs:element name="ContentDigest" type="Base64BinaryType"/>

  </xs:sequence>
</xs:complexType>

<xs:complexType name="ContentObjectType">
  <xs:sequence>
    <xs:element name="Name" type="NameType"/>
    <xs:element name="ContentAuthenticator" type="ContentAuthenticatorType"/>
    <!-- There is a tension between including the Signature in the ContentAuthenticator
         and thus having it be completely self-contained, and having the Signature
         be outside and thus easier to verify (you can't sign the signature, so
         it would have to be removed from the encoded CA before verification).
         We've tried it the other way; now try it this way to see if the code is
         cleaner. -->
    <xs:element name="Signature" type="Base64BinaryType"/>
    <xs:element name="Content" type="Base64BinaryType"/>
  </xs:sequence>
</xs:complexType>

<!-- Sometimes we just need to talk about mappings (everything needed
     to authenticate a name) without the content itself -->
<xs:complexType name="CompleteNameType">
  <xs:sequence>
    <xs:element name="Name" type="NameType"/>
    <xs:element name="ContentAuthenticator" type="ContentAuthenticatorType"/>
    <xs:element name="Signature" type="Base64BinaryType"/>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="InterestType">
  <xs:sequence>
    <xs:element name="Name" type="NameType"/>
    <xs:element name="PublisherID" type="PublisherIDType"
			minOccurs="0" maxOccurs="1"/>
    <xs:element name="Nonce" type="Base64BinaryType"
			minOccurs="0" maxOccurs="1"/>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="PublisherIDType">
  <xs:simpleContent>
    <xs:extension base="SHA256Digest">
      <xs:attribute name="type" type="PublisherTypeType" use="required"/>
      <xs:attribute name="ccnbencoding" type="xs:string" fixed="base64Binary"/>
    </xs:extension>
  </xs:simpleContent>
</xs:complexType>

<xs:complexType name="KeyIDType">
  <xs:simpleContent>
    <xs:extension base="SHA256Digest">
      <xs:attribute name="ccnbencoding" type="xs:string" fixed="base64Binary"/>
    </xs:extension>
  </xs:simpleContent>
</xs:complexType>

<xs:simpleType name="SHA256Digest">
    <xs:restriction base="xs:base64Binary">
      <!-- SHA-256 digest -->
      <xs:length value="32" fixed="true"/>
    </xs:restriction>
</xs:simpleType>

<!-- enum -->
<xs:simpleType name="PublisherTypeType">
  <xs:restriction base="xs:string">
    <xs:enumeration value="KEY"/>
    <xs:enumeration value="CERTIFICATE"/>
    <xs:enumeration value="ISSUER_KEY"/>
    <xs:enumeration value="ISSUER_CERTIFICATE"/>
  </xs:restriction>
</xs:simpleType>

<!-- enum -->
<xs:simpleType name="ContentType">
  <xs:restriction base="xs:string">
    <xs:enumeration value="FRAGMENT"/>
    <xs:enumeration value="LINK"/>
    <xs:enumeration value="CONTAINER"/>
    <xs:enumeration value="LEAF"/>
    <xs:enumeration value="SESSION"/>
    <xs:enumeration value="SEQUENCE"/>
  </xs:restriction>
</xs:simpleType>

<xs:complexType name="KeyLocatorType">
  <xs:sequence>
    <xs:choice>
      <xs:element name="Key" type="Base64BinaryType"/>
      <xs:element name="Certificate" type="Base64BinaryType"/>
      <xs:element name="KeyName" type="KeyNameType"/>
    </xs:choice>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="KeyNameType">
  <xs:sequence>
    <xs:element name="Name" type="NameType"/>
    <xs:element name="PublisherID" type="PublisherIDType"
			minOccurs="0" maxOccurs="1"/>
  </xs:sequence>
</xs:complexType>

</xs:schema>
