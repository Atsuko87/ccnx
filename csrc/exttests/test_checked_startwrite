# exttests/test_checked_startwrite
# 
# Part of the CCNx distribution.
#
# Copyright (C) 2013 Palo Alto Research Center, Inc.
#
# This work is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License version 2 as published by the
# Free Software Foundation.
# This work is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.
#
AFTER : test_single_ccnd_teardown
BEFORE : test_alone

# This tests the checked start-write command to the repository.
# http://www.ccnx.org/releases/latest/doc/technical/RepoProtocol.html

# Use a unique name for our tests.
UNIQ=`GenSym`
PREFIX=ccnx:/test-sw-c/$UNIQ

# Start a test ccnd, and set its logging at medium
WithCCND 4 CappedCCNDStart 100
WithCCND 4 ccndlogging med

# Make a nice, clean, repo directory
rm -rf sw-c
mkdir -p sw-c

# Start a repo to capture the segments
WithCCND 4 env CCNR_DEBUG=FINEST CCNR_DIRECTORY=sw-c ccnr 2>ccnr4.out &

# Write an object consisting of a few segments
I=0; while [ $((I)) -lt 8 ]; do echo segment$I; I=$((I+1)); done |
  WithCCND 4 ccnseqwriter -b 9 -r -s 1 $PREFIX

# Stop ccnd and ccnr
WithCCND 4 ccndstop
wait

# Make sure that we got the expected number of segments.
# Note - ccnseqwriter makes an empty segment at the end, so expect 9.
# This may be fixed someday.
NSEG=`ccnnamelist sw-c/repoFile1 | grep -c $PREFIX/`
[ $((NSEG)) -eq 9 ] || SkipTest expecting 9 segments, but got $((NSEG)).

# Split repo file into individual pieces
ccn_splitccnb sw-c/repoFile1

# Construct a checked start-write request for an intermediate segment
grep content_to.\*`ccnnamelist sw-c/repoFile1-00004.ccnb` ccnd4-capped-100.out|\
  cut -d ' ' -f 6 > sw-c-name.out
SWCR=`cut -d / -f 1-4 < sw-c-name.out`/%C1.R.sw-c/%C1.N%00`GenSym`/`cut -d / -f 5- < sw-c-name.out`
echo SWCR is $SWCR

# Start a new ccnd, and a new, empty, repo.
WithCCND 5 CappedCCNDStart 100
WithCCND 5 ccndlogging med
rm -rf sw-c-2
mkdir -p sw-c-2
WithCCND 5 env CCNR_DEBUG=FINEST CCNR_DIRECTORY=sw-c-2 ccnr 2>ccnr5.out &

# Issue the request, save the response.
WithCCND 5 ccnpeek -c $SWCR > sw-c.ccnb || Fail no reply to $SWCR

# Stop ccnd and ccnr
WithCCND 5 ccndstop
wait
