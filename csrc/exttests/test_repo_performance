# exttests/test_repo_performance
# 
# (Someday) Part of the CCNx distribution.
#
# Copyright (C) 2011 Palo Alto Research Center, Inc.
#
# This work is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License version 2 as published by the
# Free Software Foundation.
# This work is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.
#

AFTER : test_single_ccnd_teardown

# The data size can be set from the outside
: ${TEST_DATA_SIZE:=5000000}

# Run these without sync by default, but allow turning it on
: ${SYNC_ENABLE:=0}

# Use a ccnd to hold the pre-signed data
WithCCND 3 CappedCCNDStart $((TEST_DATA_SIZE / 4000 + 500))

# Stage the data into ccnd3
WithCCND 3 StageData $TEST_DATA_SIZE

# Prepare our start-write command
VERSIONEDNAME=`tail -n 1 lastblocks.txt | rev | cut -d / -f 2- | rev`
SWR=$VERSIONEDNAME/%C1.R.sw/%C1.N%00`GenSym`
echo Start write request will be $SWR
# ccnd1 will be the one connected to the repo
WithCCND 1 CappedCCNDStart 100
WithCCND 1 ccndc add / tcp localhost $((CCN_LOCAL_PORT_BASE + 3))
# make a new, empty repo
rm -rf testrepo2
mkdir testrepo2 || Fail
WithCCND 1 env CCNR_DIRECTORY=testrepo2 CCNR_DEBUG=WARNING ccnr 2>>ccnr1.out &
sleep 1
echo Repo write test using ccnr TEST_DATA_SIZE=$TEST_DATA_SIZE
DoPS
WithCCND 1 ccnget $SWR > startwrite2-$TEST_DATA_SIZE.out
ccnfilewatch testrepo2/repoFile1 || Fail ccnfilewatch returned $?
DoPS
WithCCND 1 ccndc del / tcp localhost $((CCN_LOCAL_PORT_BASE + 3))
WithCCND 1 ccnrm /
sleep 3
echo Repo read test using ccnr TEST_DATA_SIZE=$TEST_DATA_SIZE
DoPS
WithCCND 1 time -p ccncat $VERSIONEDNAME | dd bs=4k of=/dev/null
WithCCND 1 ccnrm /
DoPS
WithCCND 1 time -p ccncat $VERSIONEDNAME | dd bs=4k of=/dev/null
WithCCND 1 ccnrm /
DoPS
WithCCND 1 time -p ccncat $VERSIONEDNAME | dd bs=4k of=/dev/null
WithCCND 1 ccnrm /
DoPS
WithCCND 1 ccndstop

# Now do it all again with the java repo
WithCCND 1 CappedCCNDStart 100
WithCCND 1 ccndc add / tcp localhost $((CCN_LOCAL_PORT_BASE + 3))
rm -rf testrepo1
mkdir testrepo1 || Fail
WithCCND 1 env ccn_repo testrepo1
echo Repo write test using repo1 TEST_DATA_SIZE=$TEST_DATA_SIZE
DoPS
WithCCND 1 ccnget $SWR > startwrite1-$TEST_DATA_SIZE.out
ccnfilewatch testrepo1/repoFile1 || Fail ccnfilewatch returned $?
DoPS
WithCCND 1 ccnrm $VERSIONEDNAME
WithCCND 1 ccnget $VERSIONEDNAME | ccnnamelist
WithCCND 1 ccndc del / tcp localhost $((CCN_LOCAL_PORT_BASE + 3))
sleep 3
echo Repo read test using repo1 TEST_DATA_SIZE=$TEST_DATA_SIZE
DoPS
WithCCND 1 time -p ccncat $VERSIONEDNAME | dd bs=4k of=/dev/null
WithCCND 1 ccnrm $VERSIONEDNAME
DoPS
WithCCND 1 time -p ccncat $VERSIONEDNAME | dd bs=4k of=/dev/null
WithCCND 1 ccnrm $VERSIONEDNAME
DoPS
WithCCND 1 time -p ccncat $VERSIONEDNAME | dd bs=4k of=/dev/null
WithCCND 1 ccnrm $VERSIONEDNAME
DoPS
ccn_repo stopall
WithCCND 1 ccndstop

# Get startup times
echo Repo2 startup with stable index, no ccnd
time -p env CCN_LOCAL_PORT=1 CCNR_DEBUG=INFO CCNR_DIRECTORY=testrepo2 ccnr

echo Repo1 startup TEST_DATA_SIZE=$TEST_DATA_SIZE
WithCCND 3 time -p ccn_repo testrepo1
echo Shutting down Repo1
time -p ccn_repo stopall

echo Repo2 startup with index rebuild, no ccnd TEST_DATA_SIZE=$TEST_DATA_SIZE
time -p env CCN_LOCAL_PORT=1 CCNR_DEBUG=INFO CCNR_DIRECTORY=testrepo1 ccnr

WithCCND 3 ccndstop
