####
#### BigLeak.txt
####
#### Commands to test a "big" repo.
####
# To run this test one needs three bash shells.
# It can be useful to start them as separate tabs.
# A SyncUpdateRoot line in the logs shows where trees have been created.
# A client may need to set CCNR_HOME below to a different value (see below).
# We assume that ccndstart and ccnrm can be found on the search path.

## in shell 0: setup of default environment
# change the next line to change the value of CCNR_HOME!
cd ~/CCN/ccnx
echo "export CCNR_HOME=`pwd`" >/var/tmp/SyncSetup.txt
echo 'export CCNR_NAME=repo.$$' >>/var/tmp/SyncSetup.txt
echo 'export CCNR_DIRECTORY=$CCNR_HOME/$CCNR_NAME.dir' >>/var/tmp/SyncSetup.txt
echo 'rm -Rf $CCNR_DIRECTORY' >>/var/tmp/SyncSetup.txt
echo 'export CCNR_DEBUG=INFO' >>/var/tmp/SyncSetup.txt
echo 'export CCNS_DEBUG=FINE' >>/var/tmp/SyncSetup.txt
echo 'export CCNS_DELTAS_LIMIT=2000' >>/var/tmp/SyncSetup.txt
source /var/tmp/SyncSetup.txt

## in shell 0: start ccnd without debug

export CCND_CAP=600000
export CCND_LOG=/var/tmp/ccnd.log
ccndstart

## in shell 0: making the test data ($CCNR_HOME/repo0 /var/tmp/nuttin /var/tmp/2MB)

cd $CCNR_HOME
unzip -o csrc/repo0.zip -d .
echo "Nuttin much" >/var/tmp/nuttin
mkfile 2m /var/tmp/2MB

## in shell 0: OPTIONAL cleanup of old repo runs

rm -Rf $CCNR_HOME/repo.*.dir $CCNR_HOME/ccnr.*.txt

## in shell 1, start the repo derived from real data

ccnrm ccnx:/
source /var/tmp/SyncSetup.txt
rm -Rf $CCNR_DIRECTORY
cp -R $CCNR_HOME/repo0 $CCNR_DIRECTORY
gdb $CCNR_HOME/csrc/ccnr/ccnr
b SyncUtil.c:42
run

## in shell 2, start an empty repo

source /var/tmp/SyncSetup.txt
rm -Rf $CCNR_DIRECTORY; mkdir $CCNR_DIRECTORY
gdb $CCNR_HOME/csrc/ccnr/ccnr
b SyncUtil.c:42
run

## in shell 0: small tests

ccnseqwriter -r ccnx:/sen/%C1.sen.vpc.d2%00%A4O%D7%EB%F6Q%23c%C5%3B%C1%D4%F4%F6%D9%3F/%C1.sen.vpc.c/nuttinA </var/tmp/nuttin
ccnseqwriter -r ccnx:/sen/%C1.sen.vpc.d2%00%A4O%D7%EB%F6Q%23c%C5%3B%C1%D4%F4%F6%D9%3F/%C1.sen.vpc.c/nuttinC </var/tmp/nuttin
ccnseqwriter -r ccnx:/sen/%C1.sen.vpc.d2%00%A4O%D7%EB%F6Q%23c%C5%3B%C1%D4%F4%F6%D9%3F/%C1.sen.vpc.c/nuttinB </var/tmp/nuttin
ccnseqwriter -r ccnx:/sen/%C1.sen.vpc.d2%00%A4O%D7%EB%F6Q%23c%C5%3B%C1%D4%F4%F6%D9%3F/%C1.sen.vpc.c/nuttinD </var/tmp/nuttin

## in shell 0: large tests

ccnseqwriter -r ccnx:/sen/%C1.sen.vpc.d2%00%A4O%D7%EB%F6Q%23c%C5%3B%C1%D4%F4%F6%D9%3F/%C1.sen.vpc.c/nuttinX </var/tmp/2MB
ccnseqwriter -r ccnx:/sen/%C1.sen.vpc.d2%00%A4O%D7%EB%F6Q%23c%C5%3B%C1%D4%F4%F6%D9%3F/%C1.sen.vpc.c/nuttinY </var/tmp/2MB


#### leaks

rm -Rf $CCNR_HOME/repo.*.dir $CCNR_HOME/ccnr.*.txt
ps aux | grep ccnr

export MallocStackLogging=1
ccnrm ccnx:/
source /var/tmp/SyncSetup.txt
rm -Rf $CCNR_DIRECTORY
cp -R $CCNR_HOME/repo0 $CCNR_DIRECTORY
$CCNR_HOME/csrc/ccnr/ccnr &>$CCNR_HOME/ccnr.$$.txt

export MallocStackLogging=1
source /var/tmp/SyncSetup.txt
rm -Rf $CCNR_DIRECTORY; mkdir $CCNR_DIRECTORY
$CCNR_HOME/csrc/ccnr/ccnr &>$CCNR_HOME/ccnr.$$.txt

leaks -exclude malloc_zone_realloc ccnr
leaks -exclude malloc_zone_realloc 22978
leaks -exclude malloc_zone_realloc 22981

open $CCNR_HOME/ccnr.*.txt

$CCNR_HOME/csrc/sync/SyncTest -slice /sen/sync /root/beer /%FF/second

ccnseqwriter -r ccnx:/root/beer/float </var/tmp/nuttin
ccnseqwriter -r ccnx:/root/beer/float/second </var/tmp/nuttin

